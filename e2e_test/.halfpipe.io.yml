team: engineering-enablement
pipeline: e2e-test

repo:
  uri: https://github.com/robwhitby/halfpipe-example-nodejs

slack_channel: "#ee-re"

on_failure:
- type: run
  name: run on failure task
  script: blah.sh
  docker:
    image: node:9.5.0-alpine

tasks:
- type: run
  name: Test
  script: test.sh
  save_artifacts:
  - target/distribution
  - README.md
  docker:
    image: node:9.5.0-alpine

- type: deploy-cf
  name: deploy to cf
  api: dev-api
  space: dev
  manifest: manifest.yml
  username: michiel
  password: very-secret
  test_domain: some.random.domain.com
  deploy_artifact: target/distribution/artifact.zip

- type: deploy-cf
  name: deploy to staging
  parallel: true
  api: ((cloudfoundry.api-live))
  org: pe
  space: staging
  username: michiel
  password: very-secret
  vars:
      A: "0.1"
      B: "false"
  pre_promote:
  - type: run
    script: smoke-test.sh
    docker:
      image: eu.gcr.io/halfpipe-io/halfpipe-fly
    vars:
      A: "blah"
    restore_artifacts: true

  - type: consumer-integration-test
    name: c-name
    consumer: c-consumer
    consumer_host: c-host
    script: /var/c-script

- type: deploy-cf
  name: deploy to qa
  parallel: true
  api: ((cloudfoundry.api-live))
  org: pe
  space: qa
  username: michiel
  password: very-secret
  vars:
    A: "0.1"
    B: "false"
  pre_promote:
  - type: run
    name: save-artifact-in-pre-promote
    script: smoke-test.sh
    docker:
      image: eu.gcr.io/halfpipe-io/halfpipe-fly
    vars:
      A: "blah"
    save_artifacts: ["build"]

  - type: run
    name: restore artifact in pre promote
    script: smoke-test.sh
    docker:
      image: eu.gcr.io/halfpipe-io/halfpipe-fly
    vars:
      A: "blah"
    restore_artifacts: true

- type: docker-push
  name: push to docker registry
  username: rob
  password: verysecret
  image: springerplatformengineering/halfpipe-fly
  vars:
    A: a
    B: b

- type: run
  script: ./notify.sh
  docker:
    image: busy
    username: michiel
    password: blah
  vars:
    A: a
    B: b

- type: docker-compose
  vars:
    A: a

- type: consumer-integration-test
  name: another-c-name
  consumer: c-consumer
  consumer_host: c-host
  provider_host: p-host
  script: c-script
  docker_compose_service: potato
  vars:
    K: value
    K1: value1

- type: deploy-ml-zip
  deploy_zip: target/xquery.zip
  targets:
  - ml.dev.springer-sbm.com

- type: deploy-ml-modules
  name: Deploy ml-modules artifact
  ml_modules_version: "2.1425"
  app_name: my-app
  app_version: v1
  targets:
  - ml.dev.springer-sbm.com
  - ml.qa1.springer-sbm.com
