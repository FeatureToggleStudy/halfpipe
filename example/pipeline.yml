groups: []
resources:
- name: foo
  type: git
  source:
    uri: https://github.com/springernature/foo.git
- name: Cloud Foundry
  type: cf
  source:
    api: sdpokasd
    organization: orgname
    password: pwd
    space: spacename
    username: uname
- name: Cloud Foundry (1)
  type: cf
  source:
    api: sdpokasd2
    organization: orgname2
    password: pwd2
    space: spacename2
    username: uname2
- name: Docker Registry
  type: docker-image
  source:
    password: pass1
    repository: foo/bar
    username: user1
resource_types: []
jobs:
- name: run .__test.sh
  serial: true
  plan:
  - get: foo
    trigger: true
  - task: ./test.sh
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: busybox
          tag: latest
      run:
        path: /bin/sh
        args:
        - -exc
        - ././test.sh
        dir: foo
      inputs:
      - name: foo
        path: ""
- name: run .__build.sh
  serial: true
  plan:
  - get: foo
    passed:
    - run .__test.sh
    trigger: true
  - task: ./build.sh
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: busybox
          tag: latest
      run:
        path: /bin/sh
        args:
        - -exc
        - ././build.sh
        dir: foo
      inputs:
      - name: foo
        path: ""
- name: deploy-cf
  serial: true
  plan:
  - get: foo
    passed:
    - run .__build.sh
    trigger: true
  - put: Cloud Foundry
    params:
      environment_variables: {}
      manifest: ""
- name: deploy-cf (1)
  serial: true
  plan:
  - get: foo
    passed:
    - deploy-cf
    trigger: true
  - put: Cloud Foundry (1)
    params:
      environment_variables: {}
      manifest: ""
- name: run .__notify.sh
  serial: true
  plan:
  - get: foo
    passed:
    - deploy-cf (1)
    trigger: true
  - task: ./notify.sh
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: busybox
          tag: latest
      run:
        path: /bin/sh
        args:
        - -exc
        - ././notify.sh
        dir: foo
      inputs:
      - name: foo
        path: ""
- name: docker-push
  serial: true
  plan:
  - get: foo
    passed:
    - run .__notify.sh
    trigger: true
  - put: Docker Registry
    params:
      build: foo

