groups: []
resources:
- name: halfpipe
  type: git
  source:
    branch: go1.11
    uri: git@github.com:springernature/halfpipe.git
jobs:
- name: Test
  serial: true
  plan:
  - get: halfpipe
    trigger: true
  - task: Test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: golang
          tag: 1.11rc2-alpine3.8
      run:
        path: /bin/sh
        args:
        - -ec
        - |
          go test ./...
          cd e2e_test
          ./test.sh
      inputs:
      - name: halfpipe
- name: Build
  disable_manual_trigger: true
  plan:
  - aggregate:
    - get: halfpipe
      passed:
      - Test
  - task: Build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: golang
          tag: 1.11rc2-alpine3.8
      run:
        path: /bin/sh
        args:
        - -ec
        - |
          export VERSION="0.0.0-test"
          export CONF_PKG="github.com/springernature/halfpipe/config"
          export LDFLAGS="-X ${CONF_PKG}.Version=${VERSION}"
          export LDFLAGS="${LDFLAGS} -X ${CONF_PKG}.VaultPrefix=springernature"
          export LDFLAGS="${LDFLAGS} -X ${CONF_PKG}.SlackWebhook=https://hooks.slack.com/services/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"
          echo "LDFLAGS=${LDFLAGS}"

          # Build binaries
          CGO_ENABLED=0 GOARCH=amd64 GOOS=darwin go build -o halfpipe_darwin_$VERSION -ldflags "${LDFLAGS}" cmd/halfpipe.go
          CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -o halfpipe_linux_$VERSION -ldflags "${LDFLAGS}" cmd/halfpipe.go
          CGO_ENABLED=0 GOARCH=amd64 GOOS=windows go build -o halfpipe_windows_$VERSION.exe -ldflags "${LDFLAGS}" cmd/halfpipe.go

          cp halfpipe_darwin_$VERSION halfpipe_linux_$VERSION halfpipe_windows_$VERSION.exe binaries
          ls -lah binaries
      inputs:
      - name: halfpipe
      outputs:
      - name: binaries
