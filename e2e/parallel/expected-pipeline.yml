# Generated using halfpipe cli version 0.0.0-DEV
groups: []
resources:
- name: git
  type: git
  source:
    branch: master
    paths:
    - e2e/parallel
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
- name: version
  type: semver
  source:
    bucket: ((halfpipe-semver.bucket))
    driver: gcs
    json_key: ((halfpipe-semver.private_key))
    key: engineering-enablement-halfpipe-e2e-parallel
resource_types: []
jobs:
- name: update
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        trigger: true
        params:
          depth: 1
        attempts: 2
    timeout: 1h
  - task: halfpipe update
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/halfpipe-auto-update
          tag: latest
          username: _json_key
      params:
        CONCOURSE_PASSWORD: ((concourse.password))
        CONCOURSE_TEAM: ((concourse.team))
        CONCOURSE_URL: ((concourse.url))
        CONCOURSE_USERNAME: ((concourse.username))
        HALFPIPE_DOMAIN: halfpipe.io
        HALFPIPE_PROJECT: halfpipe-io
        PIPELINE_NAME: halfpipe-e2e-parallel
      run:
        path: update-pipeline
        dir: git/e2e/parallel
      inputs:
      - name: git
    timeout: 1h
    attempts: 2
  - put: version
    params:
      bump: minor
    timeout: 1h
    attempts: 2
- name: parallel 1 1
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - update
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - update
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 1 1
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 1 2
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - update
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - update
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 1 2
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 2 1
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 1 1
        - parallel 1 2
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 1 1
        - parallel 1 2
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 2 1
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 2 2
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 1 1
        - parallel 1 2
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 1 1
        - parallel 1 2
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 2 2
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: not parallel
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 2 1
        - parallel 2 2
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 2 1
        - parallel 2 2
        trigger: true
        attempts: 2
    timeout: 1h
  - task: not parallel
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 3 1
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - not parallel
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - not parallel
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 3 1
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 3 2
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - not parallel
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - not parallel
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 3 2
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 3 3
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - not parallel
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - not parallel
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 3 3
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 4 sequence 1 1
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 3 1
        - parallel 3 2
        - parallel 3 3
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 3 1
        - parallel 3 2
        - parallel 3 3
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 4 sequence 1 1
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 4 sequence 1 2
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 4 sequence 1 1
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 4 sequence 1 1
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 4 sequence 1 2
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 4 sequence 2 1
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 3 1
        - parallel 3 2
        - parallel 3 3
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 3 1
        - parallel 3 2
        - parallel 3 3
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 4 sequence 2 1
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 4 sequence 2 2
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 4 sequence 2 1
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 4 sequence 2 1
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 4 sequence 2 2
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 4 sequence 2 3
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 4 sequence 2 2
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 4 sequence 2 2
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 4 sequence 2 3
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: parallel 4 1
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 3 1
        - parallel 3 2
        - parallel 3 3
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 3 1
        - parallel 3 2
        - parallel 3 3
        trigger: true
        attempts: 2
    timeout: 1h
  - task: parallel 4 1
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
- name: after parallel
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - parallel 4 sequence 1 2
        - parallel 4 sequence 2 3
        - parallel 4 1
        params:
          depth: 1
        attempts: 2
      - get: version
        passed:
        - parallel 4 sequence 1 2
        - parallel 4 sequence 2 3
        - parallel 4 1
        trigger: true
        attempts: 2
    timeout: 1h
  - task: after parallel
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`
          export BUILD_VERSION=`cat ../../../version/version`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/parallel
      inputs:
      - name: git
      - name: version
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1

